services:
  hackathon-keycloak:
    image: quay.io/keycloak/keycloak
    container_name: hackathon-keycloak
    hostname: hackathon-keycloak
    env_file:
      - .env
    command:
      - "start-dev"
      - "--import-realm"
      - "--hostname-strict=false"
      - "--http-enabled=true"
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/Steel-realm.json:/opt/keycloak/data/import/Steel-realm.json:ro
    networks:
      - hackathon-network


  hackathon-frontend:
    build:
      context: ./frontend
    env_file:
      - .env
    depends_on:
      - hackathon-web
    networks:
      - hackathon-network
    ports:
      - "3000:3000"

  hackathon-db:
    image: postgres:16.0
    container_name: hackathon-db
    hostname: hackathon-db
    env_file:
      - .env
    networks:
      - hackathon-network
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  hackathon-import:
    image: postgres:16.0
    container_name: hackathon-import
    hostname: hackathon-import
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - hackathon-network
    volumes:
      - ./webhook_bot/src/app/adapters/sqlalchemy_db/import_data:/scripts
    command: >
      sh -c "chmod +x /scripts/import.sh && /scripts/import.sh"

  hackathon-migrations:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.migrations
      target: migrations
    env_file:
      - .env
    depends_on:
      hackathon-db:
        condition: service_healthy
    container_name: hackathon-migrations
    hostname: hackathon-migrations
    networks:
      - hackathon-network


  hackathon-web:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.web
      target: development
    env_file:
      - .env
    volumes:
      - ./webhook_bot/src:/src
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    container_name: hackathon-web
    hostname: hackathon-web
    ports:
      - "5000:5000"
    networks:
      - hackathon-network

  hackathon-bot:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.bot
    env_file:
      - .env
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    container_name: hackathon-bot
    hostname: hackathon-bot
    networks:
      - hackathon-network

networks:
  hackathon-network:
    name: hackathon-network
    driver: bridge

volumes:
  db-data: