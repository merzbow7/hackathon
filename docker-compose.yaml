services:
  hackathon-keycloak:
    image: quay.io/keycloak/keycloak
    container_name: hackathon-keycloak
    hostname: hackathon-keycloak
    env_file:
      - .env
    command: [ "start-dev", "--import-realm", "--proxy-headers=xforwarded", "--hostname-strict=false"]
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro
    networks:
      - hackathon-network

  
#  hackathon-nginx:
#    container_name: hackathon-nginx
#    hostname: hackathon-nginx
#    image: nginx:latest
#    env_file:
#      - .env
#    volumes:
#      - ./nginx/templates:/etc/nginx/templates
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/ca/certificate.crt:/etc/nginx/ssl/certificate.crt
#      - ./nginx/ca/private.key:/etc/nginx/ssl/private.key
#    depends_on:
#      hackathon-bot-web:
#        condition: service_started
#    ports:
#      - "8083:80"
#    networks:
#      - hackathon-network


  hackathon-db:
    image: postgres:16.0
    container_name: hackathon-db
    hostname: hackathon-db
    env_file:
      - ./webhook_bot/.env
    networks:
      - hackathon-network
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  hackathon-migrations:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.migrations
      target: migrations
    env_file:
      - ./webhook_bot/.env
    depends_on:
      hackathon-db:
        condition: service_healthy
    container_name: hackathon-migrations
    hostname: hackathon-migrations
    networks:
      - hackathon-network


  hackathon-web:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.web
      target: development
    env_file:
      - ./webhook_bot/.env
    volumes:
      - ./webhook_bot/src:/src
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    container_name: hackathon-web
    hostname: hackathon-web
    ports:
      - "5000:5000"
    networks:
      - hackathon-network

  hackathon-bot:
    build:
      context: ./webhook_bot
      dockerfile: ./src/infrastructure/Dockerfile.bot
    env_file:
      - ./webhook_bot/.env
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    container_name: hackathon-bot
    hostname: hackathon-bot
    networks:
      - hackathon-network

networks:
  hackathon-network:
    name: hackathon-network
    driver: bridge

volumes:
  db-data: