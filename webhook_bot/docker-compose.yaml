services:
  hackathon-db:
    image: postgres:16.0
    container_name: hackathon-db
    hostname: hackathon-db
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - hackathon-network
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  hackathon-migrations:
    build:
      context: .
      dockerfile: src/infrastructure/Dockerfile
      target: migrations
    env_file:
      - .env
    depends_on:
      hackathon-db:
        condition: service_healthy
    container_name: hackathon-migrations
    hostname: hackathon-migrations
    networks:
      - hackathon-network


  hackathon-bot-web:
    build:
      context: .
      dockerfile: src/infrastructure/Dockerfile
      target: development
    env_file:
      - .env
    volumes:
      - ./src:/src
    depends_on:
      hackathon-migrations:
        condition: service_completed_successfully
    container_name: hackathon-bot-web
    hostname: hackathon-bot-web
    networks:
      - hackathon-network
    ports:
      - "5000:5000"

networks:
  hackathon-network:
    driver: bridge

volumes:
  db-data:
